{"Structs/Promise.html#/s:V12PinkyPromise7Promise4Task":{"name":"Task","abstract":"<p>A function representing the work to be done by a promise. A task must eventually call its given observer function exactly once.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:V12PinkyPromise7Promise8Observer":{"name":"Observer","abstract":"<p>A completion function for the task wrapped by a promise.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7PromisecFT4taskFFGOS_6Resultx_T_T__GS0_x_":{"name":"init(task:)","abstract":"<p>Creates a promise that produces its result by running a given asynchronous task.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7PromisecFT6resultGOS_6Resultx__GS0_x_":{"name":"init(result:)","abstract":"<p>Creates a promise that, when called, immediately produces a given result.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7PromisecFT5valuex_GS0_x_":{"name":"init(value:)","abstract":"<p>Creates a promise that, when called, immediately succeeds with a given value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7PromisecFT5errorPs5Error__GS0_x_":{"name":"init(error:)","abstract":"<p>Creates a promise that, when called, immediately fails with a given error.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:ZFV12PinkyPromise7Promise4liftFFzT_xGS0_x_":{"name":"lift(_:)","abstract":"<p>Creates a promise that, when called, immediately produces its result from a given function.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise3mapurFFxqd__GS0_qd___":{"name":"map(_:)","abstract":"<p>Creates a promise that wraps this promise and transforms its success value to a new success value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise6tryMapurFFzxqd__GS0_qd___":{"name":"tryMap(_:)","abstract":"<p>Creates a promise that wraps this promise and runs a second failable task with its success value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise7flatMapurFFxGS0_qd___GS0_qd___":{"name":"flatMap(_:)","abstract":"<p>Creates a promise that wraps this promise and runs a second failable task with its success value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise7recoverFFPs5Error_GS0_x_GS0_x_":{"name":"recover(_:)","abstract":"<p>Creates a promise that wraps this promise and runs a second failable task with its error.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise5retryFT12attemptCountSi_GS0_x_":{"name":"retry(attemptCount:)","abstract":"<p>Creates a promise that wraps this promise and repeatedly runs it until it succeeds, up to a maximum number of runs.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise12inBackgroundFT_GS0_x_":{"name":"inBackground()","abstract":"<p>Creates a promise that wraps this promise and runs it on a background queue.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise15inDispatchGroupFCSo13DispatchGroupGS0_x_":{"name":"inDispatchGroup(_:)","abstract":"<p>Creates a promise that wraps this promise and runs it while participating in a dispatch group.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise8onResultFFGOS_6Resultx_T_GS0_x_":{"name":"onResult(_:)","abstract":"<p>Creates a promise that wraps this promise and performs a secondary task with its result.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise9onSuccessFFxT_GS0_x_":{"name":"onSuccess(_:)","abstract":"<p>Creates a promise that wraps this promise and performs a secondary task with its success value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise9onFailureFFPs5Error_T_GS0_x_":{"name":"onFailure(_:)","abstract":"<p>Creates a promise that wraps this promise and performs a secondary task with its error.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise4callFT10completionGSqFGOS_6Resultx_T___T_":{"name":"call(completion:)","abstract":"<p>Performs work defined by the promise and eventually produces the promise&rsquo;s value.</p>","parent_name":"Promise"},"Structs/Promise.html#/s:FV12PinkyPromise7Promise7enqueueFT2inGCS_12PromiseQueuex__T_":{"name":"enqueue(in:)","abstract":"<p>Adds a promise to a queue.</p>","parent_name":"Promise"},"Structs/Promise.html":{"name":"Promise","abstract":"<p>A transformable, repeatable, failable asynchronous task.</p>"},"Functions.html#/s:F12PinkyPromise3zipu0_rFTGOS_6Resultx_GS0_q___GS0_Txq___":{"name":"zip(_:_:)","abstract":"<p>From two results, returns one result wrapping all their values or the first error.</p>"},"Functions.html#/s:F12PinkyPromise3zipu1_rFTGOS_6Resultx_GS0_q__GS0_q0___GS0_Txq_q0___":{"name":"zip(_:_:_:)","abstract":"<p>From three results, returns one result wrapping all their values or the first error.</p>"},"Functions.html#/s:F12PinkyPromise3zipu2_rFTGOS_6Resultx_GS0_q__GS0_q0__GS0_q1___GS0_Txq_q0_q1___":{"name":"zip(_:_:_:_:)","abstract":"<p>From four results, returns one result wrapping all their values or the first error.</p>"},"Functions.html#/s:F12PinkyPromise8zipArrayurFGSaGOS_6Resultx__GS0_GSax__":{"name":"zipArray(_:)","abstract":"<p>From an array of results, returns one result wrapping all their values or the first error.</p>"},"Functions.html#/s:F12PinkyPromise3zipu0_rFTGVS_7Promisex_GS0_q___GS0_Txq___":{"name":"zip(_:_:)","abstract":"<p>Creates a promise that runs two promises simultaneously and unifies their results.</p>"},"Functions.html#/s:F12PinkyPromise3zipu1_rFTGVS_7Promisex_GS0_q__GS0_q0___GS0_Txq_q0___":{"name":"zip(_:_:_:)","abstract":"<p>Creates a promise that runs three promises simultaneously and unifies their results.</p>"},"Functions.html#/s:F12PinkyPromise3zipu2_rFTGVS_7Promisex_GS0_q__GS0_q0__GS0_q1___GS0_Txq_q0_q1___":{"name":"zip(_:_:_:_:)","abstract":"<p>Creates a promise that runs four promises simultaneously and unifies their results.</p>"},"Functions.html#/s:F12PinkyPromise8zipArrayurFGSaGVS_7Promisex__GS0_GSax__":{"name":"zipArray(_:)","abstract":"<p>Creates a promise that runs an array of promises simultaneously and unifies their results.</p>"},"Enums/Result.html#/s:FO12PinkyPromise6Result7successurFMGS0_x_FxGS0_x_":{"name":"success","abstract":"<p>A successful result wrapping a returned value.</p>","parent_name":"Result"},"Enums/Result.html#/s:FO12PinkyPromise6Result7failureurFMGS0_x_FPs5Error_GS0_x_":{"name":"failure","abstract":"<p>A failed result wrapping a thrown error.</p>","parent_name":"Result"},"Enums/Result.html#/s:FO12PinkyPromise6ResultcFT6createFzT_x_GS0_x_":{"name":"init(create:)","abstract":"<p>Creates a result by immediately invoking a function that returns or throws.</p>","parent_name":"Result"},"Enums/Result.html#/s:FO12PinkyPromise6Result5valueFzT_x":{"name":"value()","abstract":"<p>Returns or throws the wrapped value or error.</p>","parent_name":"Result"},"Enums/Result.html#/s:FO12PinkyPromise6Result3mapurFFxqd__GS0_qd___":{"name":"map(_:)","abstract":"<p>Transforms a success value and wraps it in a new successful result.</p>","parent_name":"Result"},"Enums/Result.html#/s:FO12PinkyPromise6Result7flatMapurFFxGS0_qd___GS0_qd___":{"name":"flatMap(_:)","abstract":"<p>Transforms a success value into a new successful or failed result.</p>","parent_name":"Result"},"Enums/Result.html#/s:FO12PinkyPromise6Result6tryMapurFFzxqd__GS0_qd___":{"name":"tryMap(_:)","abstract":"<p>Transforms a success value into a new successful or failed result.</p>","parent_name":"Result"},"Enums/Result.html":{"name":"Result","abstract":"<p>A model for a success or failure.</p>"},"Classes/PromiseQueue.html#/s:FC12PinkyPromise12PromiseQueuecFT_GS0_x_":{"name":"init()","abstract":"<p>Creates a queue.</p>","parent_name":"PromiseQueue"},"Classes/PromiseQueue.html#/s:FC12PinkyPromise12PromiseQueue5batchFT8promisesGSaGVS_7Promisex___GS1_GSax__":{"name":"batch(promises:)","abstract":"<p>Creates a promise that enqueues an array of promises and unifies their results.</p>","parent_name":"PromiseQueue"},"Classes/PromiseQueue.html":{"name":"PromiseQueue","abstract":"<p>A simple queue that runs one Promise at a time in the order they&rsquo;re added.</p>"},"Classes.html":{"name":"Classes","abstract":"The following classes are available globally."},"Enums.html":{"name":"Enums","abstract":"The following enums are available globally."},"Functions.html":{"name":"Functions","abstract":"The following functions are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."}}